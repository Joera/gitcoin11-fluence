(seq
 (seq
  (seq
   (seq
    (seq
     (seq
      (seq
       (seq
        (seq
         (seq
          (seq
           (seq
            (seq
             (seq
              (seq
               (seq
                (seq
                 (seq
                  (seq
                   (seq
                    (seq
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (seq
                              (seq
                               (seq
                                (seq
                                 (seq
                                  (seq
                                   (seq
                                    (call %init_peer_id% ("getDataSrv" "relay") [] relay)
                                    (call %init_peer_id% ("getDataSrv" "facade_cid") [] facade_cid)
                                   )
                                   (call %init_peer_id% ("getDataSrv" "curl_adapter_cid") [] curl_adapter_cid)
                                  )
                                  (call %init_peer_id% ("getDataSrv" "local_storage_cid") [] local_storage_cid)
                                 )
                                 (call %init_peer_id% ("getDataSrv" "ipfs") [] ipfs)
                                )
                                (call %init_peer_id% ("getDataSrv" "module_name") [] module_name)
                               )
                               (call %init_peer_id% ("getDataSrv" "service_name") [] service_name)
                              )
                              (call relay ("aqua-ipfs" "get_from") [facade_cid ipfs] get_result)
                             )
                             (xor
                              (match get_result.$.success! true
                               (seq
                                (seq
                                 (call relay ("dist" "default_module_config") [module_name] config)
                                 (call relay ("dist" "add_module_from_vault") [get_result.$.path! config] module_hash)
                                )
                                (ap module_hash $modules)
                               )
                              )
                              (ap get_result.$.error! $err)
                             )
                            )
                            (call relay ("aqua-ipfs" "get_from") [curl_adapter_cid ipfs] get_result0)
                           )
                           (ap 100 $mem_pages_count)
                          )
                          (call relay ("op" "array") ["curl" "/usr/bin/curl"] curl)
                         )
                         (call relay ("op" "array") [curl] mounted_binaries_array)
                        )
                        (ap mounted_binaries_array $mounted_binaries)
                       )
                       (call relay ("dist" "make_module_config") ["curl_adapter" $mem_pages_count [] [] [] [] $mounted_binaries []] config0)
                      )
                      (call relay ("dist" "add_module_from_vault") [get_result0.$.path! config0] module_hash0)
                     )
                     (call relay ("op" "concat_strings") ["hash:" module_hash0] dependency)
                    )
                    (ap dependency $dependencies)
                   )
                   (call relay ("aqua-ipfs" "get_from") [local_storage_cid ipfs] get_result1)
                  )
                  (ap 1 $mem_pages_count0)
                 )
                 (call relay ("op" "array") ["/tmp"] preopened_files_array)
                )
                (ap preopened_files_array $preopened_files)
               )
               (call relay ("op" "array") ["sites" "/tmp"] sites)
              )
              (call relay ("op" "array") [sites] mapped_dirs_array)
             )
             (ap mapped_dirs_array $mapped_dirs)
            )
            (call relay ("op" "array") ["curl" "/usr/bin/curl"] curl0)
           )
           (call relay ("op" "array") [curl0] mounted_binaries_array0)
          )
          (ap mounted_binaries_array0 $mounted_binaries0)
         )
         (call relay ("dist" "make_module_config") ["local_storage" $mem_pages_count0 [] $preopened_files [] $mapped_dirs $mounted_binaries0 []] config1)
        )
        (call relay ("dist" "add_module_from_vault") [get_result1.$.path! config1] module_hash1)
       )
       (call relay ("op" "concat_strings") ["hash:" module_hash1] dependency2)
      )
      (ap dependency2 $dependencies)
     )
     (fold $modules m
      (seq
       (seq
        (call relay ("op" "concat_strings") ["hash:" m] prefixed_hash)
        (ap prefixed_hash $dependencies)
       )
       (next m)
      )
     )
    )
    (call relay ("dist" "make_blueprint") [service_name $dependencies] blueprint)
   )
   (call relay ("dist" "add_blueprint") [blueprint] blueprint_id)
  )
  (call relay ("srv" "create") [blueprint_id] service_id)
 )
 (call %init_peer_id% ("callbackSrv" "response") [service_id $err])
)
